version: '2.2'
services:
  # Battlefield 2 1.5 server with bf2stats 3.2.0 python scripts
  bf2:
    image: startersclan/docker-bf2:v1.5.3153.0-bf2stats-3.2.0
    volumes:
      - ./config/bf2/mods/bf2/ai/aidefault-custom.ai:/server/bf2/mods/bf2/ai/aidefault.ai:ro # Customize bots
      - ./config/bf2/mods/bf2/settings/serversettings-custom.con:/server/bf2/mods/bf2/settings/serversettings.con:ro # Server config
      - ./config/bf2/mods/bf2/settings/maplist-custom-coop.con:/server/bf2/mods/bf2/settings/maplist.con:ro # Maplist (coop)
      - ./config/bf2/python/bf2/BF2StatisticsConfig-custom.py:/server/bf2/python/bf2/BF2StatisticsConfig.py:ro # bf2stats python config
    ports:
      - 16567:16567/udp
      - 29900:29900/udp
    networks:
      - gamespy-network
      - bf2-network
    depends_on:
      - asp
    restart: unless-stopped
    tty: true
    stdin_open: true

  # The Gamespy master server
  prmasterserver:
    image: startersclan/prmasterserver:v0.1.0
    volumes:
      - prmasterserver-volume:/data
    ports:
      - 29900:29900/tcp # Login server
      - 29901:29901/tcp # Login server
      - 28910:28910/tcp # Master server
      - 27900:27900/udp # Master server
      - 29910:29910/udp # CD key server
    networks:
      # Spoof all gamespy DNS for the BF2 server connected to this network
      gamespy-network:
        aliases:
          - battlefield2.available.gamespy.com
          - battlefield2.master.gamespy.com
          - battlefield2.ms14.gamespy.com
          - master.gamespy.com
          - motd.gamespy.com
          - gpsp.gamespy.com
          - gpcm.gamespy.com
          - gamespy.com
    restart: unless-stopped

  init-container:
    image: alpine:latest
    volumes:
      - ./src:/src
      - db-volume:/var/lib/mysql
    entrypoint:
      - /bin/sh
    command:
      - -c
      - |
          set -eu

          echo "Granting db write permissions"
          chown -R 999:999 /var/lib/mysql

  asp:
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME?err}_traefik-network"
      # traefik v2
      # http
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME?err}-asp-gamespy-http.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME?err}-asp-gamespy-http.rule=Host(`bf2web.gamespy.com`)" # Note: `bf2web.gamespy.com` doesn't need https. The BF2 client BFHQ makes a HTTP requests to `bf2web.gamespy.com` with `Host: bf2web.gamespy.com`.
    environment:
      # - XDEBUG_MODE=off   # Uncomment to disable xdebug
      # See ./src/ASP/system/config/config.php for all supported env vars
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=bf2stats
      - DB_USER=root
      - DB_PASS=ascent
    volumes:
      - ./src:/src
      - backups-volume:/src/ASP/system/backups # This volume is effectively unused since ASP doesn't allow DB backups for a remote DB, but mount it anyway to avoid errors.
      - cache-volume:/src/ASP/system/cache
      - config-volume:/src/ASP/system/config # For a stateful config file
      - logs-volume:/src/ASP/system/logs
      - snapshots-volume:/src/ASP/system/snapshots
    ports:
      - 8081:80
      - 9000
    networks:
      - bf2-network
    extra_hosts:
      # For xdebug to reach the host via `host.docker.internal`. See: https://github.com/moby/moby/pull/40007#issuecomment-578729356 and https://stackoverflow.com/questions/49907308/installing-xdebug-in-docker
      # If xdebug does not work, you may need to add an iptables rule to the INPUT chain: iptables -A INPUT -i br+ -j ACCEPT
      - host.docker.internal:host-gateway

  db:
    image: mariadb:10.8
    environment:
      - MARIADB_ROOT_PASSWORD=ascent
      # - MARIADB_USER=admin # Uncomment this if you want to create a regular user
      # - MARIADB_PASSWORD=admin # Uncomment this if you want to create a regular user
      - MARIADB_DATABASE=bf2stats
    volumes:
      - ./src/ASP/system/sql/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro # Seed the DB the first time
      - ./src/ASP/system/sql/data.sql:/docker-entrypoint-initdb.d/02-data.sql:ro # Seed the DB the first time
      - ./config/db/setup.sql:/docker-entrypoint-initdb.d/03-setup.sql:ro # Setup the DB the first time
      - ./config/db/my.cnf:/etc/my.cnf:ro
      - db-volume:/var/lib/mysql
    networks:
      - bf2-network
    depends_on:
      - init-container

  phpmyadmin:
    image: phpmyadmin:5.2
    environment:
      - PMA_HOST=db
    ports:
      - 8083:80
    networks:
      - bf2-network

networks:
  bf2-network:
  gamespy-network:

volumes:
  prmasterserver-volume:
  backups-volume:
  cache-volume:
  config-volume:
  logs-volume:
  snapshots-volume:
  db-volume:
